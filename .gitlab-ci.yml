stages:
  - build

default:
  # timeout: 3h # NB doesnt work as of 1/2021
  interruptible: true

variables:
  MAD_NUM_THREADS : 2
  TA_TARGETS : "tiledarray examples-tiledarray ta_test check-tiledarray"
  # Debug builds with ScaLAPACK=ON need increased TA_UT_CTEST_TIMEOUT
  TA_CONFIG : >
    CMAKE_BUILD_TYPE=${BUILD_TYPE}
    TA_ASSERT_POLICY=TA_ASSERT_THROW
    TA_UT_CTEST_TIMEOUT=3000
    ${TA_PYTHON}
    ${ENABLE_CUDA}
    ${BLA_VENDOR}
    ${BLA_THREADS}
    ${ENABLE_SCALAPACK}

before_script:
  # NB: if CMAKE_BUILD_PARALLEL_LEVEL is not set (i.e. using shared runner), use 1 to ensure we have enough memory
  # TODO optimize ta_test build memory consumption
  - export CMAKE_BUILD_PARALLEL_LEVEL=${CMAKE_BUILD_PARALLEL_LEVEL:=1}
  - echo "CMAKE_BUILD_PARALLEL_LEVEL=$CMAKE_BUILD_PARALLEL_LEVEL"

ubuntu:
  stage: build
  tags:
    - docker
    - ${RUNNER_TAGS}
  timeout: 3h
  image: valeevgroup/${IMAGE}
  variables:
    TA_PYTHON : "TA_PYTHON=ON"
    ENABLE_SCALAPACK : "ENABLE_SCALAPACK=OFF"
  script:
    - ./ci/.build-project
        --build ./build
        --metrics ./build/metrics.txt
        ${TA_CONFIG}
        ${TA_TARGETS}
        MPIEXEC_PREFLAGS='--bind-to;none;--allow-run-as-root'
        ScaLAPACK_LIBRARIES="scalapack-openmpi;lapack;blas"
        #blacs_LIBRARIES=scalapack-openmpi
        #scalapack_LIBRARIES=scalapack-openmpi
        #lapack_LIBRARIES=lapack
  artifacts:
    paths:
    - build/metrics.txt
    - build/CMakeCache.txt
    - build/CMakeFiles/CMakeOutput.log
    - build/CMakeFiles/CMakeError.log
    - build/CMakeFiles/CMakeConfigureLog.yaml
    reports:
      metrics: build/metrics.txt
  parallel:
    matrix:
      - IMAGE : [ "ubuntu:22.04", "ubuntu:20.04" ]
        CXX: [ g++ ]
        BUILD_TYPE : [ "Release" ]
        BLA_VENDOR : [ "BLAS_PREFERENCE_LIST=IntelMKL" ]
        BLA_THREADS : [ "IntelMKL_THREAD_LAYER=tbb" ]
        # ENABLE_SCALAPACK : [ "ENABLE_SCALAPACK=ON", "ENABLE_SCALAPACK=OFF" ]
        TA_PYTHON : [ "TA_PYTHON=OFF" ] # needs to be fixed for MKL
        RUNNER_TAGS: [ linux ]
      - IMAGE : [ "ubuntu:22.04", "ubuntu:20.04" ]
        CXX: [ g++, clang++-13 ]
        BUILD_TYPE : [ "Release", "Debug" ]
        ENABLE_SCALAPACK : [ "ENABLE_SCALAPACK=ON", "ENABLE_SCALAPACK=OFF" ]
        RUNNER_TAGS: [ linux ]
      - IMAGE : [ "ubuntu:22.04", "ubuntu:20.04" ]
        CXX: [ g++ ]
        BUILD_TYPE : [ "Release", "Debug" ]
        ENABLE_CUDA : [ "ENABLE_CUDA=ON" ]
        TA_TARGETS : [ "tiledarray examples-tiledarray check_serial-tiledarray" ]
        RUNNER_TAGS: [ cuda ]
